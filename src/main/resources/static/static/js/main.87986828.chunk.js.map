{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/projectActions.js","actions/types.js","components/Project/projectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","delete","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","icon","faUserAlt","fullname","userIsNotAuthenticated","fullName","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","confirm","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","faPlusCircle","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","update_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.87986828.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  await axios.delete(`/api/project/${id}`);\n  dispatch({\n    type: DELETE_PROJECT,\n    payload: id,\n  });\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/projectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    //post => Login request\n\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    //extract token from res.data\n    const { token } = res.data;\n\n    //store the token in the local storage\n    localStorage.setItem(\"jwtToken\", token);\n\n    //set our token in header ***\n    setJWTToken(token);\n\n    //decode token on react\n    const decoded = jwt_decode(token);\n\n    //dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <FontAwesomeIcon icon={faUserAlt} />\n              {\" \" + user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management System\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropsTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <h1>{errors.projectName}</h1>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create / Edit Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropsTypes.func.isRequired,\n  errors: PropsTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(UpdateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Uptate Project</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n    \n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone!`\n    )\n  )\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n  dispatch({\n    type: DELETE_PROJECT_TASK,\n    payload: pt_id,\n  });\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\n            {todoItems}\n            {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center \" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <FontAwesomeIcon icon={faPlusCircle} />\n          Create Project Task\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { id } = this.props.match.params;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: null,\n      projectIdentifier: \"\",\n      create_At: \"\",\n      update_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name:{this.state.projectIdentifier} + Project Task ID:\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management System\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <p>PS: You can use the following account to test this app.</p>\n\n                <li>Username: test@email.com</li>\n                <li>Password: test</li>\n\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.username,\n                      })}\n                      placeholder=\"User name(Email Address)\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.onChange}\n                    />\n                    {errors.username && (\n                      <div className=\"invalid-feedback\">{errors.username}</div>\n                    )}\n                  </div>\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/secureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              //public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //private routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}